<?php
namespace App\Security;

use App\Entity\Post;
use App\Entity\User;
use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
use Symfony\Component\Security\Core\Authorization\Voter\Voter;

class PostVoter extends Voter
{
    public const POST_DELETE = 'POST_DELETE';

    protected function supports(string $attribute, $subject): bool
    {
        return in_array($attribute, [self::POST_DELETE])
            && $subject instanceof Post;
    }

    /**
     * @param string $attribute
     * @param Post $post
     * @param TokenInterface $token
     */
    protected function voteOnAttribute(string $attribute, $post, TokenInterface $token): bool
    {
        $user = $token->getUser();

        if (!$user instanceof User) {
            return false;
        }

        switch ($attribute) {
            case self::POST_DELETE:
                return $this->canDelete($post, $user);
        }

        return false;
    }

    private function canDelete(Post $post, User $user): bool
    {
        if (in_array('ROLE_ADMIN', $user->getRoles())) {
            return true;
        }

        return $post->getAuthor()->getId() === $user->getId();
    }
}
